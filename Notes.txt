1. The three important column in the csv file generated by PEEcmd.exe for finding evedence is:
	a. Executable Name   ==> This is the most promising
	b. Directories
	c. Files Loaded  ==> Don't analyse this as it will produce a lot of FalsePositive
	
	
2.	We can minimize the noise by comparing these columns againest a well known list of signed files
		- Create a SQLite DB for well known Files ==> Take advantage from EDR or SigCheck.exe and aggregation from all endpoints
		- Create a SQLite query to lookup entries in the csv file from PECmd.exe
		- If not found, 
			=> look in the Directory column if there is suspecious directory named there, 
			=> look if the file still there, if not may be suspecious
				* Calculate the hash MD5 and check it against VT
			=> if non of the above, mark it for more invistigation 
			
		

3.	Introducing the frequency (Stacking) analysis of the loaded file:
		- Include only exe files like .exe, .dll, and .sys 
		- Does running from multiple locations effect this measure?
		- What value can we use > 4, 5 or what?

4.	Analysis running executable from diffirent locations 
5.	Analysis running executable with diffirent commandlines ==> If locations are the same, it may be because the commandlines are different
6. Check if it is running from abnormal locations
7. Sandbox, Copy Prefetch before running malicious file and again after running the malcious file and compare between them
8. During collecting evidence artifacts, don't forget also to collect signature with SigCheck.exe 
	- prove file presence on the system
	- use it to query VirusTotal
	- update the signed.db database
9. The above(SigCheck.exe) will take long time, try to ==>
	- use parallel processing or
	- list only all files on the system without signatures(hashes)